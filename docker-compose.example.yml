version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: ecommerce-db
    environment:
      POSTGRES_DB: ${DB_DATABASE:-your_database_name}
      POSTGRES_USER: ${DB_USERNAME:-your_username}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-your_secure_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  api:
    build: .
    container_name: ecommerce-api
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      ConnectionStrings__DefaultConnection: "Host=db;Database=${DB_DATABASE:-your_database_name};Username=${DB_USERNAME:-your_username};Password=${DB_PASSWORD:-your_secure_password}"
    ports:
      - "5000:80"
      - "5001:443"
    depends_on:
      - db
    networks:
      - ecommerce-network

volumes:
  postgres_data:

networks:
  ecommerce-network:
    driver: bridge

# Instructions:
# 1. Copy this file: cp docker-compose.example.yml docker-compose.yml
# 2. Create .env.docker file with your actual environment variables
# 3. Run: docker-compose --env-file .env.docker up --build
